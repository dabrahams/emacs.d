
* General Config

#+BEGIN_SRC emacs-lisp

  (setq inhibit-default-init t)

#+END_SRC

** Use Package

Install use-package to make package management and configuration nicer.

#+BEGIN_SRC emacs-lisp

  (unless (package-installed-p 'use-package)
    (package-refresh-contents)
    (package-install 'use-package))

  (eval-when-compile
    (require 'use-package))
  (require 'diminish)
  (require 'bind-key)

#+END_SRC

** Custom

#+BEGIN_SRC emacs-lisp

  (setq custom-file "~/.emacs.d/custom.el")
  (load custom-file 'noerror)

#+END_SRC

* UI

** Theme

#+BEGIN_SRC emacs-lisp

  (use-package apropospriate-theme
    :ensure t
    :config (load-theme 'apropospriate-dark t))

#+END_SRC

** Chrome

#+BEGIN_SRC emacs-lisp

  (setq
   indicate-empty-lines t
   inhibit-startup-screen t
   initial-scratch-message nil
   ring-bell-function 'ignore
   scroll-conservatively 10000
   scroll-preserve-screen-position t
   use-dialog-box nil
   )

  (setq-default
   cursor-in-non-selected-windows nil
   )

  (fset 'yes-or-no-p #'y-or-n-p)

  (global-hl-line-mode t)
  (global-visual-line-mode 0)
  (line-number-mode 0)
  (scroll-bar-mode 0)
  (show-paren-mode t)
  (tool-bar-mode 0)

#+END_SRC

* Evil

  [[https://github.com/emacs-evil/evil][Evil mode]] is an impressively complete Vim emulation layer for
  emacs. With evil mode, emacs can act as a better vim than vim itself
  due to having a much more flexible platform upon which to build an
  editor ecosystem.
  
#+BEGIN_SRC emacs-lisp

  (use-package evil
    :ensure t
    :demand t
    :bind (:map evil-motion-state-map
                ("j" . evil-next-visual-line)
                ("k" . evil-previous-visual-line)
                ("C-j" . evil-scroll-down)
                ("C-k" . evil-scroll-up)
           :map evil-normal-state-map
                ("[ q" . previous-error)
                ("] q" . next-error)
                ("-" . dired-jump))
    :init
    (setq evil-mode-line-format '(before . mode-line-front-space)
          evil-want-C-w-in-emacs-state t
          evil-want-Y-yank-to-eol t
          evil-visual-state-cursor 'hollow)
    :config
    (add-hook 'git-commit-mode-hook #'evil-insert-state)
    (evil-define-key 'normal dired-mode-map "-" 'dired-up-directory)
    (evil-mode t))

    (use-package evil-commentary
      :ensure t
      :after evil
      :diminish ""
      :config (evil-commentary-mode))

    (use-package evil-surround
      :ensure t
      :after evil
      :config (global-evil-surround-mode t))

    (use-package evil-quickscope
      :ensure t
      :after evil
      :config (global-evil-quickscope-mode t))

#+END_SRC
